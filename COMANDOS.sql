CREATE DATABASE ; /*CRIA NOVO BANCO DE DADOS*/
USE ;/*USA BANCO DE DADOS SELECIONADO*/
CREATE TABLE ;/*CRIA NOVA TABELA DENTRO DO BANCO DE DADOS*/
SHOW TABLES;/*RETORNA TABELAS E VIEWS DENTRO DO BANCO DE DADOS*/
SHOW DATABASES;/*RETORNA TODOS OS BANCOS DE DADOS DO SGBD*/
SHOW CREATE TABLE ;/*RETORNA QUERY QUE CRIOU TABELA*/
DESC ;/*MOSTRA A ESTRUTURA DA TABELA*/
STATUS;/*RETORNA STATUS DE TODO O SGBD*/
DROP TABLE ;/*DELETA TABELA DO BANCO DE DADOS*/
DROP VIEW ;/*DELETA VIEWS DO BANCO DE DADOS*/
DROP PROCEDURE ;/*DELETA PROCEDURE DO BD*/
SELECT NOW;/*RETORNA DATA/HORA ATUAL*/
INNER JOIN;/* JUNTA TABELAS NA MESMA QUERY */
ALTER TABLE CHANGE;/*ALTERA O NOME DA TABELA E O TIPO*/
ALTER TABLE ADD;/*ADICIONA COLUNA NA TABELA*/
AS ; /*NOMEIA COLUNA AO RETORNAR QUERY*/
IFNULL() AS;/*RETORNA NULOS COM MSG*/ 

--DDL - DATA DEFINITION LANGUAGE -  DEFINIÇÃO DE DADOS
 CHAR E VARCHAR --CARACTERES LITERAIS
 INT E FLOAT --NUMEROS
 BLOB --OBJETOS COMO FOTO E DOCUMENTOS
 TEXT --TEXTOS EXTENSOS
 INT PRIMARY KEY --IDENTIFICADOR ÚNICO DA TABELA
 UNIQUE --SÓ PODE SER REGISTRADO UMA VEZ NO BANCO DE DADOS 1X1 A AUSENCIA DE UNIQUE TRANSFORMA O DADO EM 1XN
 FOREIGN KEY --CHAVE ESTRANGEIRA CRIADA NA TABELA 
 REFERENCES TABELA(COLUNA) --REFERENCIA TABELA E COLUNA ESTRANGEIRA
 NULL --VAZIO
 NOT NULL --NÃO VAZIO

/*SINTAXE BÁSICA DE INSERÇÃO DE DADOS NA TABELA
EXEMPLOS:*/
/*FORMA 01 – EXCLUINDO AS COLUNAS */
INSERT INTO CLIENTE VALUES(‘JOAO’,’M’,’JOAO@GMAIL.COM’,’03652544789’,'51996325889',’PADRE CACIQUE 520 - CENTRO - OSORIO-RS’);
/*FORMA 02 -COLOCANDO AS COLUNAS - MELHOR FORMA*/
INSERT INTO CLIENTE(NOME,SEXO,ENDERECO,TELEFONE,CPF) VALUES('LILIAN','F','SENADOR SOARES - TIJUCA - RIO DE JANEIRO - RJ','947785696',887774856);
/*FORMA 03 - INSERTCOMPACTO - SOMENTE MYSQL*/
INSERT INTO CLIENTE VALUES('ANA','F','ANA@GLOBO.COM',85548962,'548556985','PRES ANTONIO CARLOS - CENTRO - SAO PAULO- SP'),
('CARLA','F','CARLA@TERATI.COM.BR',7745828,'66587458','SAMUEL SILVA - CENTRO - BELO HORIZONTE - MG');

/*EXEMPLO DE PROJEÇÃO/SELEÇÃO*/
/*SELEÇÃO = WHERE --SUBCONJUNTO DE UM CONJUNTO TOTAL DE REGISTROS DE UMA TABELA*/
/*PROJEÇÃO = SELECT --TUDO O QUE VC QUER VER NA TELA*/
SELECT NOME, SEXO, EMAIL /*PROJEÇÃO*/
FROM CLIENTE /*ORIGEM*/
WHERE SEXO = 'F'; /*SELEÇÃO*/

SELECT MAX(COLUNA) AS MAIOR_COLUNA --RETORNA O VALOR MÁXIMO DE UMA COLUNA
FROM TABELA;

SELECT MIN(COLUNA) AS MENOR_COLUNA --RETORNA O VALOR MÍNIMO DE UMA COLUNA
FROM TABELA;

SELECT AVG(COLUNA) AS MEDIA_COLUNA --RETORNA VALOR MÉDIO DE UMA COLUNA
FROM TABELA

SELECT MAX(COLUNA1) AS MAIOR_COLUNA1, --RETORNA OS VALORES MÁXIMO, MÍNIMO E MÉDIA DE UMA COLUNA
       MIN(COLUNA1) AS MENOR_COLUNA1,
       AVG(COLUNA1) AS MEDIA_COLUNA1
FROM TABELA;

SELECT MAX(COLUNA) AS MAX_COLUNA, 
       MIN(COLUNA) AS MIN_COLUNA,
	   TRUNCATE(AVG(COLUNA),2) AS MEDIA_COLUNA --TRUNCATE NECESSITA DE DOIS PARAMETROS, UM NUMERO OU COLUNA E A QUANTIDADE DE CASAS DECIMAIS DEPOIS DA VIRGULA
	   FROM TABELA;
     
/*EXEMPLOS DE ORDER BY*/
SELECT * FROM TABELA --ORDENA PELA COLUNA SOLICITADA
ORDER BY COLUNA;

SELECT * FROM TABELA --ORDENA PELO ÍNDICE DA COLUNA
ORDER BY 1;

SELECT * FROM ALUNOS --ORDENA POR MAIS DE UMA COLUNA
ORDER BY NUMERO, NOME;

SELECT NOME FROM ALUNOS --MESCLA ORDER BY COM PROJEÇÃO
ORDER BY NUMERO, NOME;

SELECT * FROM TABELA --ORDENA EM MODO ASCENDENTE
ORDER BY COLUNA ASC;

SELECT * FROM TABELA --ORDENA EM MODO DESCENDENTE
ORDER BY COLUNA DESC;

/*ALTER TABLE EXEMPLOS*/
ALTER TABLE PRODUTO 
CHANGE PRECO VALOR_UNITARIO INT(10) NOT NULL; --ALTERA NOME  E TIPO

ALTER TABLE PRODUTO 
CHANGE VALOR_UNITARIO VALOR_UNITARIO INT(11) NOT NULL; --ALTERA TIPO MANTEM O NOME

/*MODIFY EXEMPLOS*/
ALTER TABLE PRODUTO
MODIFY VALOR_UNITARIO FLOAT(10,2) NOT NULL; --ALTERA TIPO

/*ADICIONANDO COLUNA*/
ALTER TABLE PRODUTO
ADD PESO FLOAT(10,2) NOT NULL; --ADICIONA COLUNA NA TABELA

/*APAGAR COLUNA*/
ALTER TABLE PRODUTO --DROPA COLUNA SOLICITADA
DROP COLUMN PESO;

/*ADICIONANDO COLUNA NA ORDEM ESPECIFICA*/
ALTER TABLE PRODUTO --ADD COLUNA PESSO DEPOIS DE NOME_PRODUTO
ADD COLUMN PESO FLOAT(10,2) NOTT NULL
AFTER NOME_PRODUTO;

ALTER TABLE PRODUTO --ADD COLUNA PESO NA PRIMEIRA POSIÇÃO
ADD COLUMN PESO FLOAT(10,2) NOTT NULL
FIRST;

/*CRIANDO PROCEDURE*/
CREATE PROCEDURE NOME()
BEGIN

  QUERY;

END
$
CALL NAME_PROCEDURE; --CHAMA PROCEDURE 
DROP PROCEDURE NAME_PROCEDURE; --DELETA PROCEDURE

--EXEMPLO DE PROCEDURE COM CURSORES E VARIÁVEIS
CREATE PROCEDURE INSEREDADOS() --PROCEDURE COM CURSORES E VARIÁVEIS
BEGIN
		DECLARE FIM INT DEFAULT 0; --VARIAVEL REGRA PARA FINALIZAR LOOP
		DECLARE VAR1, VAR2, VAR3, VTOTAL, VMEDIA INT;
		DECLARE VNOME VARCHAR(50);
		
		DECLARE REG CURSOR FOR(
			SELECT NOME, JAN, FEV, MAR FROM VENDEDORES
		);
		
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET FIM = 1; --FINALIZA LOOP ELSE
		
		OPEN REG;
		
		REPEAT --INICIA LOOP
		
			FETCH REG INTO VNOME, VAR1, VAR2, VAR3; --FETCH ME TRAGA O PROXIMO
			IF NOT FIM THEN --SE FIM NÃO FOR VERDADEIRO, CONTINUE
			
				SET VTOTAL = VAR1 + VAR2 + VAR3;
				SET VMEDIA = VTOTAL / 3;
				
				INSERT INTO VEND_TOTAL VALUES(VNOME,VAR1,VAR2,VAR3,VTOTAL,VMEDIA); --INSERE VARIÁVEIS NA TABELA
				
			END IF; --FINALIZA IF
			
		UNTIL FIM END REPEAT; --FINALIZA REPEAT
		
		CLOSE REG; -- FINALIZA REG
END --FINALIZA PROCEDURE
$

/*triggers*/
CREATE TRIGGER NOME
BEFORE/AFTER INSERT/DELETE/UPDATE ON TABELA
FOR EACH ROW (PARA CADA LINHA)
BEGIN -- INICIO

		QUALQUER COMANDO SQL

END --FIM
$

/*ALTERANDO TABELAS*/
ALTER TABLE TABELA --ADICIONA PRIMARY KEY
ADD PRIMARY KEY (COLUNA1);

ALTER TABLE TABELA --ADICIONA COLUNA, SEMPRE ULTIMA POSIÇÃO
ADD COLUNA varchar(30);

ALTER TABLE TABELA --ADICIONA COLUNA EM POSIÇÃO DETERMINADA
ADD COLUMN COLUNA4 VARCHAR(30) NOT NULL UNIQUE
AFTER COLUNA3;

ALTER TABLE TABELA --MODIFICA O CAMPO DA COLUNA
 MODIFY COLUNA2 DATE NOT NULL;

ALTER TABLE TABELA --RENOMEIA COLUNA
RENAME PESSOA;

ALTER TABLE TABELA --ADD FOREIGN KEY
ADD FOREIGN KEY(ID_PESSOA)
REFERENCES PESSOA(COLUNA1);

/*INSERE DADOS NO BANCO/TABELA SELECIONADO*/
INSERT INTO BANCO.TABELA VALUES(NULL,1000,'TESTE',0.0);

/*PRIMEIRA FORMA NORMAL:

1-PRIMEIRA REGRA: TODO CAMPO VETORIZADO SE TORNARÁ OUTRA TABELA
(AMARELO, AZUL LARANJA, VERDE) --> CORES
(KA, FIESTA, UNO. CIVIC) --> CARROS

2-SEGUNDA REGRA: TODO CAMPO MULTIVALORADO SE TORNARÁ OUTRA TABELA,
ENDERECO: RUA, NUMERO, BAIRRO, CIDADE, ESTADO, PAIS.

3-TERCEIRA REGRA: TODA TABELA NECESSITA DE PELO MENOS 1 CAMPO QUE IDENTIFIQUE TODO O REGISTRO COMO SENDO UNICO
CHAVE PRIMARIA (natural/artificial)*/

/*SEGUNDA FORMA NORMAL
CAMPOS NÃO CHAVE DEPENDEM DA TOTALIDADE DA CHAVE*/

/*TERCEIRA FORMA NORMAL
DEPENDENCIA TRANSITIVA
CAMPOS NÃO CHAVE QUE DEPENDEM DE OUTROS CAMPOS NÃO CHAVE VIRAM OUTRA TABELA
